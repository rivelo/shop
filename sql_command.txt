mysqldump -u django -pdjangodjango catalog -t --tables accounting_bicycle > d:\dump_bicycle.txt

mysql --verbose -u django -pdjangodjango catalog < d:\dump_bicycle.txtBicycleBicycle


mysql -h rivelo.mysql.ukraine.com.ua -u rivelo_db -ppiopio


LOAD DATA LOCAL INFILE '/importfile.csv' 
INTO TABLE test_table 
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
(field1, filed2, field3);


LOAD DATA LOCAL INFILE 'd:/importfile.csv' into table accounting_worktype character set utf8 fields terminated by ';' lines terminated by '\n' (work_group_id, name, description, price);


mysqldump -u django -pdjangodjango catalog > d:\dump.txt



mysql -h 188.165.174.53 --verbose -u rivelo -pSZEw2QjzyEyo38oyTlAsYu55Lhnv1ZDM rivelo < d:\dump.txt

mysqldump -h 212.224.118.173 --verbose -u rivelo -pSZEw2QjzyEyo38oyTlAsYu55Lhnv1ZDM rivelo > d:\dump_online.txt


select u.username, u.user_password, u.user_email, u.user_birthday, u.user_avatar, u.user_from, u.user_icq, u.user_jabber, u.user_website, u.user_interest
s, p.pf_bike, p.pf_surname_name, p.pf_phone_number  from phpbb_users u LEFT outer join phpbb_profile_fields_data p on u.user_id=p.user_id INTO OUTFILE 'd:/result.txt';


mysql> select u.username, u.user_password, u.user_email, u.user_birthday, u.user
_avatar, u.user_from, u.user_icq, u.user_jabber, u.user_website, u.user_interest
s, p.pf_bike, p.pf_surname_name, p.pf_phone_number  from phpbb_users u LEFT oute
r join phpbb_profile_fields_data p on u.user_id=p.user_id INTO OUTFILE 'd:/resul
t.txt' FIELDS TERMINATED BY ',' ENCLOSED BY '"' LINES TERMINATED BY '\n' ;


mysql> alter table accounting_dealerpayment add  `dealear_invoice_id` integer NOT NULL;

mysql> insert into accounting_dealerpayment (date, bank_id, price, currency_id, description, invoice_number, dealer_invoice_id, letter) select date, bank_id, price, currency_id, description, invoice_number, 164 as dealer_invoice_id, False as letter from dealerpayment;



Итак, перед нами стоит задача: конвертировать данные, из изначально некорректно заявленной кодировки latin1 в корректную кодировку cp1251. Идем в документацию по языку:

If you want to change the table default character set and all character columns (CHAR, VARCHAR, TEXT) to a new character set, use a statement like this:
ALTER TABLE tbl_name CONVERT TO CHARACTER SET charset_name; (1)

Не спешим выполнять предложенное решение, а читаем дальше:


Warning: The preceding operation converts column values between the character sets. This is not what you want if you have a column in one character set (like latin1) but the stored values actually use some other, incompatible character set (like cp1251). In this case, you have to do the following for each such column:
ALTER TABLE t1 CHANGE c1 c1 BLOB; (2)
ALTER TABLE t1 CHANGE c1 c1 TEXT CHARACTER SET cp1251; (3)

The reason this works is that there is no conversion when you convert to or from BLOB columns.





mysql> ALTER TABLE accounting_invoicecomponentlist MODIFY description VARCHAR(25
5) CHARACTER SET utf8; COLLATE utf8_general_ci NULL;


mysql> select  catalog_id, manufacturer_id from accounting_invoicecomponentlist 
left join accounting_catalog on catalog_id=accounting_catalog.id;

### change catalog table ###
alter table `accounting_catalog` add `count` integer NOT NULL;
alter table `accounting_catalog` add `length` double precision;

alter table `accounting_bicycle` add `sale` double precision;
update accounting_bicycle set sale=0;

alter table `accounting_workshop` add `pay` bool NOT NULL;
alter table `accounting_workshop` add `user_id` integer; 


alter table `accounting_clientinvoice` change date date datetime;
alter table `accounting_clientinvoice` add `user_id` integer;
alter table accounting_clientcredits add `user_id` integer;
alter table accounting_clientdebts add `user_id` integer;
alter table accounting_bicycle_sale add `user_id` integer;
alter table accounting_bicycle_order add `user_id` integer;
alter table accounting_clientcredits change date date datetime;
alter table accounting_clientdebts change date date datetime;

alter table accounting_client add `birthday` date;
alter table accounting_clientorder add `status` bool NOT NULL;
alter table accounting_clientorder add `credit_id` integer;

alter table accounting_bicycle_sale add `sale` integer NOT NULL;
alter table accounting_bicycle_sale add `debt_id` integer;
alter table accounting_bicycle_sale add `sum` double precision;

#merge two client
update accounting_workshop set client_id=11 where client_id=234;
update accounting_clientorder set client_id=11 where client_id=234;
update accounting_clientinvoice set client_id=11 where client_id=234;
update accounting_clientdebts set client_id=11 where client_id=234;
update accounting_clientcredits set client_id=11 where client_id=234;
update accounting_bicycle_sale set client_id=11 where client_id=234;

#add currency price 
alter table accounting_catalog add `c_price` double precision;

#RENT
alter table accounting_rent add `cred_id` integer ;

alter table accounting_clientreturn add `cash` bool NOT NULL;
 